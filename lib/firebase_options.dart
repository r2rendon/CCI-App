// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members

import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Configuraciones predeterminadas para usar con Firebase.
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions no ha sido configurado para windows - '
          'puedes reconfigurarlo usando el CLI de FlutterFire',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions no ha sido configurado para linux - '
          'puedes reconfigurarlo usando el CLI de FlutterFire',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions no est√° configurado para ${defaultTargetPlatform.name} - '
          'puedes reconfigurarlo usando el CLI de FlutterFire',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'tu-api-key',
    appId: 'tu-app-id',
    messagingSenderId: 'tu-messaging-sender-id',
    projectId: 'tu-project-id',
    authDomain: 'tu-auth-domain',
    storageBucket: 'tu-storage-bucket',
    measurementId: 'tu-measurement-id',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'tu-api-key',
    appId: 'tu-app-id',
    messagingSenderId: 'tu-messaging-sender-id',
    projectId: 'tu-project-id',
    storageBucket: 'tu-storage-bucket',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'tu-api-key',
    appId: 'tu-app-id',
    messagingSenderId: 'tu-messaging-sender-id',
    projectId: 'tu-project-id',
    storageBucket: 'tu-storage-bucket',
    iosClientId: 'tu-ios-client-id',
    iosBundleId: 'tu-ios-bundle-id',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'tu-api-key',
    appId: 'tu-app-id',
    messagingSenderId: 'tu-messaging-sender-id',
    projectId: 'tu-project-id',
    storageBucket: 'tu-storage-bucket',
    iosClientId: 'tu-ios-client-id',
    iosBundleId: 'tu-ios-bundle-id',
  );
}
